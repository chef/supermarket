#!{{pkgPathFor "core/bash"}}/bin/bash

{{#if svc.me.follower}}
source {{pkg.svc_config_path}}/functions.sh

init_pgpass
if master_ready 2>&1 >/dev/null; then
  echo "Master pg is available at {{svc.leader.sys.ip}}"
  local_xlog=$(local_xlog_position)
  master_xlog=$(master_xlog_position)
  xlog_diff=$((master_xlog-local_xlog))
  echo "Diff between master and local replica {{svc.me.sys.ip}} is ${xlog_diff}"
  if [ "$xlog_diff" -gt "{{cfg.replication.lag_health_threshold}}" ];then
    echo "Replica is lagging larger than allowed {{cfg.lag_health_threshold}}"
    exit 2
  fi
else
  echo "Master pg is unavailable at {{svc.leader.sys.ip}} ! Health State for follower is critical"
  exit 2
fi
{{else}}
# pg_isready returns 0 to the shell if the server is accepting connections
# normally, 1 if the server is rejecting connections (for example during
# startup), 2 if there was no response to the connection attempt, and 3 if no
# attempt was made (for example due to invalid parameters).
#
# The options --dbname and --username are used to avoid gratuitous
# error messages in the logs, but are not necessary for proper
# functionality.
#
# We return CRITICAL if we can't connect as well as if the server is
# rejecting connections (not yet ready).
{ pg_isready --port {{cfg.port}} --dbname postgres --username {{cfg.superuser.name}} --quiet; err="$?"; } || true
case "$err" in
    "0") exit 0;;               # OK (200)
    "3") exit 3;;               # UNKNOWN (500)
    *)   exit 2;;               # CRITICAL (503)
esac
{{/if}}
